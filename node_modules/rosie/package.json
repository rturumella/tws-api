{
  "name": "rosie",
  "version": "0.2.0",
  "description": "factory for building JavaScript objects, mostly useful for setting up test data. Inspired by factory_girl",
  "keywords": [
    "factory",
    "rosie",
    "test"
  ],
  "author": {
    "name": "Brandon Keepers",
    "email": "brandon@opensoul.org"
  },
  "contributors": [],
  "dependencies": {},
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/bkeepers/rosie.git"
  },
  "main": "src/rosie.js",
  "readme": "# Rosie\n\n![Rosie the Riveter](http://upload.wikimedia.org/wikipedia/commons/thumb/1/12/We_Can_Do_It%21.jpg/220px-We_Can_Do_It%21.jpg)\n\nRosie is a factory for building JavaScript objects, mostly useful for setting up test data. It is inspired by [factory_girl](https://github.com/thoughtbot/factory_girl).\n\n## Usage\n\nDefine your factory, giving it a name and optionally a constructor function:\n\n    Factory.define('game', Game)\n      .sequence('id')\n      .attr('is_over', false)\n      .attr('created_at', function() { return new Date(); })\n      .attr('random_seed', function() { return Math.random(); })\n      .attr('players', function() {\n        return [\n          Factory.attributes('player'),\n          Factory.attributes('player')\n        ];\n      });\n\n    Factory.define('player')\n      .sequence('id')\n      .sequence('name', function(i) { return 'player' + i; });\n\n    Factory.define('disabled-player').extend('player').attr('state', 'disabled')\n\nNow you can build an object, passing in attributes that you want to override:\n\n    var game = Factory.build('game', {is_over:true});\n\nWhich returns an object that looks roughly like:\n\n    {\n      id:           1,\n      is_over:      true,   // overriden when building\n      created_at:   Fri Apr 15 2011 12:02:25 GMT-0400 (EDT),\n      random_seed:  0.8999513240996748,\n      players: [\n                    {id: 1, name:'Player 1'},\n                    {id: 2, name:'Player 2'}\n      ]\n    }\n\nFor a factory with a constructor, if you want just the attributes:\n\n    Factory.attributes('game') // return just the attributes\n    \nYou can also define a callback function to be run after building an object:\n\n    Factory.define('coach').after(function(coach, options) { if (options.buildPlayer) { Factory.build('player', {coach_id: coach.id}; } })\n    \n    Factory.build('coach', {}, {buildPlayer: true});\n\n## Credits\n\nThanks to [Daniel Morrison](http://twitter.com/danielmorrison/status/58883772040486912) for the name and [Jon Hoyt](http://twitter.com/jonmagic) for inspiration and brainstorming the idea.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/bkeepers/rosie/issues"
  },
  "homepage": "https://github.com/bkeepers/rosie",
  "_id": "rosie@0.2.0",
  "_from": "rosie@~0.2"
}
